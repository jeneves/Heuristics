After implementing the base Tabu search algorithm, we determined that the neighborhood space for each solution was much too large to search exhaustively. Therefore, we experimented with different ways of constraining the neighborhood search, while preserving an even search distribution.

We modifed the base Tabu search algorithm such that neighbors of the current solution are computed by shuffling a fixed number of bits in a given cell (row). Each shuffle iteration is defined as a single pairwise swap of two randomly selected bits in the cell. The number of shuffle iterations used to compute each neighbor is a parameter which we define at the beginning of each trial. For each cell, we compute a fixed number of neighbors each having been perturbed in that cell. A cell is defined as tabu if it was perturbed in the recent past, thus preventing searching neighbors with perturbations in the same cell.
